@* @model System.Linq.IQueryable<SuperShop.Web.Data.Entities.OrderDetailTemp> *@
@* @model System.Linq.IOrderedEnumerable<SuperShop.Web.Data.Entities.OrderDetailTemp> *@
@model IEnumerable<SuperShop.Web.Data.Entities.OrderDetailTemp>


@{
    ViewData["Title"] = "Create - Shopping List";
    Layout = "_Layout";
}


<h2>@ViewData["Title"] </h2>


<p>
    <a asp-action="AddProduct" class="btn btn-success">
        <span class="material-symbols-outlined">add</span>
        Add Product
    </a>

    @* <a asp-action="ConfirmOrder" class="btn btn-primary" id="btnConfirm" *@
    @*    data-bs-toggle="modal" data-bs-target="#confirmStaticBackdrop"> *@
    @*     Confirm Order *@
    @* </a> *@

    <!-- Button to trigger modal ="#confirmStaticBackdrop" -->
    <a asp-action="ConfirmOrder" type="button" class="btn btn-primary" id="btnConfirm"
       data-bs-toggle="modal" data-bs-target="#confirmOrder">
        <span class="material-symbols-outlined">check</span>
        @* <i class="bi bi-check-lg"></i> *@
        Confirm Order
    </a>

    <a asp-action="Index" class="btn btn-secondary">
        <span class="material-symbols-outlined">chevron_left</span>
        <i class="fa-solid fa-arrow-left"></i> Back to List
    </a>

</p>

<table class="table">
    <thead>
    <tr>
        @if (User.IsInRole("Admin"))
        {
            <th>
                @Html.DisplayNameFor(model => model.User.FullName)
            </th>
        }

        <th>
            @Html.DisplayNameFor(model => model.Product.Name)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.Quantity)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.Value)
        </th>
        <th></th>
    </tr>
    </thead>

    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            @if (User.IsInRole("Admin"))
            {
                <td>
                    @Html.DisplayFor(modelItem => item.User.FullName)
                </td>
            }
            <td>
                @Html.DisplayFor(modelItem => item.Product.Name)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Value)
            </td>

            <td id="@item.Id">
                <a asp-action="Increase" asp-route-id="@item.Id" class="btn btn-warning">
                    <i class="material-symbols-outlined">add</i> <i class="fa fa-plus"></i>
                </a>
                <a asp-action="Decrease" asp-route-id="@item.Id" class="btn btn-info">
                    <i class="material-symbols-outlined">remove</i>
                    @* <i class="fa fa-minus"></i> *@
                </a>
                <a asp-action="DeleteItem" asp-route-id="@item.Id" class="btn btn-danger"
                   data-bs-toggle="modal" data-bs-target="#deleteOrderItem">
                    <span class="material-symbols-outlined">delete</span>Delete
                </a>
            </td>

        </tr>
    }
    </tbody>
</table>


<partial name="_OrdersModal"/>


@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="~/js/orders.js"></script>
}